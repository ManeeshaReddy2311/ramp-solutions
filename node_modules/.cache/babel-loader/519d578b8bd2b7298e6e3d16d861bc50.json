{"ast":null,"code":"var _jsxFileName = \"/Users/maneeshareddy/Downloads/ramp-fe-challenge/src/components/InputCheckbox/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef } from 'react';\nimport classNames from 'classnames';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Adjust the import according to your setup\nexport const InputCheckbox = _ref => {\n  _s();\n\n  let {\n    id,\n    checked,\n    onChange\n  } = _ref;\n  const {\n    current: inputId\n  } = useRef(`RampInputCheckbox-${id}`);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"RampInputCheckbox--container\",\n    \"data-testid\": inputId,\n    children: /*#__PURE__*/_jsxDEV(\"label\", {\n      className: classNames(\"RampInputCheckbox--label\", {\n        \"RampInputCheckbox--label-checked\": checked\n      }),\n      htmlFor: inputId // Associate label with input\n      ,\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        id: inputId,\n        type: \"checkbox\",\n        className: \"RampInputCheckbox--input\",\n        checked: checked,\n        onChange: () => onChange(!checked)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n\n_s(InputCheckbox, \"XaNTSVvrq+AGGzCQ8+z19Jwbjfc=\");\n\n_c = InputCheckbox;\n\nvar _c;\n\n$RefreshReg$(_c, \"InputCheckbox\");","map":{"version":3,"names":["React","useRef","classNames","InputCheckbox","id","checked","onChange","current","inputId"],"sources":["/Users/maneeshareddy/Downloads/ramp-fe-challenge/src/components/InputCheckbox/index.tsx"],"sourcesContent":["import React, { useRef } from 'react';\nimport classNames from 'classnames';\nimport { InputCheckboxComponent } from './types'; // Adjust the import according to your setup\n\nexport const InputCheckbox: InputCheckboxComponent = ({ id, checked, onChange }) => {\n  const { current: inputId } = useRef(`RampInputCheckbox-${id}`);\n\n  return (\n    <div className=\"RampInputCheckbox--container\" data-testid={inputId}>\n      <label\n        className={classNames(\"RampInputCheckbox--label\", {\n          \"RampInputCheckbox--label-checked\": checked\n        })}\n        htmlFor={inputId} // Associate label with input\n      >\n        <input\n          id={inputId}\n          type=\"checkbox\"\n          className=\"RampInputCheckbox--input\"\n          checked={checked}\n          onChange={() => onChange(!checked)}\n        />\n      </label>\n    </div>\n  );\n};"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;AACA,OAAOC,UAAP,MAAuB,YAAvB;;AACkD;AAElD,OAAO,MAAMC,aAAqC,GAAG,QAA+B;EAAA;;EAAA,IAA9B;IAAEC,EAAF;IAAMC,OAAN;IAAeC;EAAf,CAA8B;EAClF,MAAM;IAAEC,OAAO,EAAEC;EAAX,IAAuBP,MAAM,CAAE,qBAAoBG,EAAG,EAAzB,CAAnC;EAEA,oBACE;IAAK,SAAS,EAAC,8BAAf;IAA8C,eAAaI,OAA3D;IAAA,uBACE;MACE,SAAS,EAAEN,UAAU,CAAC,0BAAD,EAA6B;QAChD,oCAAoCG;MADY,CAA7B,CADvB;MAIE,OAAO,EAAEG,OAJX,CAIoB;MAJpB;MAAA,uBAME;QACE,EAAE,EAAEA,OADN;QAEE,IAAI,EAAC,UAFP;QAGE,SAAS,EAAC,0BAHZ;QAIE,OAAO,EAAEH,OAJX;QAKE,QAAQ,EAAE,MAAMC,QAAQ,CAAC,CAACD,OAAF;MAL1B;QAAA;QAAA;QAAA;MAAA;IANF;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAkBD,CArBM;;GAAMF,a;;KAAAA,a"},"metadata":{},"sourceType":"module"}